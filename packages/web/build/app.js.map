{"version":3,"sources":["src/index.js","src/bootstrap/index.js","src/state/Store.js","src/pages/index.js","src/pages/one.js","src/pages/two.js","src/pages/three.js","src/bootstrap/AppWrapGlue.js","src/bootstrap/RouteChainFactory.js"],"names":["require","one","two","three","builder","add","Router","getRouter","elementToRenderTo","document","getElementById","App","render","AppModel","model","count","optional","number","increment","decrement","store","create","pages","style","margin","RaisedButtonExampleSimple","TableExampleSimple","PageOne","Component","noopComponent","observer","AppWrapGlue","setInterval","props","children","browserHistory","listLinkAndRoute","path","component","li","route","RouteChain","parent","history","routes","state","pathToMatch","test","values","map","One","Two","Three"],"mappings":";;;;;;AAAA;AACAA,QAAQ,aAAR;;;;;;ACDA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;IACOC,sBAAAA;IAAKC,sBAAAA;IAAKC,wBAAAA;;AAEjB;AACA;AACA;;AACA,IAAMC,UAAU,iCAAhB;AACAA,QAAQC,GAAR,CAAY,GAAZ,EAAiBJ,GAAjB,EAAsBI,GAAtB,CAA0B,MAA1B,EAAkCH,GAAlC,EAAuCG,GAAvC,CAA2C,QAA3C,EAAqDF,KAArD;AACA,IAAMG,SAASF,QAAQG,SAAR,EAAf;;AAEA,IAAMC,oBAAoBC,SAASC,cAAT,CAAwB,MAAxB,CAA1B;AACA,IAAMC,MAAM,SAANA,GAAM;AAAA,SACV;AAAA;AAAA,MAAS,sBAAT;AACE;AAAA;AAAA;AACE,oCAAC,MAAD,IAAQ,sBAAR;AADF;AADF,GADU;AAAA,CAAZ;;AAQA,mBAASC,MAAT,CAAgB,8BAAC,GAAD,OAAhB,EAAyBJ,iBAAzB;AACA;;;;;;;;;;AC7BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;AACA,IAAMK,WAAW,qBAAMC,KAAN,CACf;AACEC,SAAO,qBAAMC,QAAN,CAAe,qBAAMC,MAArB,EAA6B,CAA7B;AADT,CADe,EAIf;AACEC,WADF,uBACc;AACV,SAAKH,KAAL;AACD,GAHH;AAIEI,WAJF,uBAIc;AACV,SAAKJ,KAAL;AACD;AANH,CAJe,CAAjB;;AAcA,IAAMK,QAAQP,SAASQ,MAAT,EAAd;kBACeD;;;;;;;;;;ACnBf;;;;AACA;;;;AACA;;;;;;AAEA,IAAME,QAAQ,EAACrB,kBAAD,EAAMC,kBAAN,EAAWC,sBAAX,EAAd,EAPA;AACA;AACA;kBAOemB;;;;;;;;;;;;ACTf;;;;AACA;;;;;;;;;;AAUA,IAAMC,QAAQ;AACZC,UAAQ;AADI,CAAd;;AAIA,IAAMC,4BAA4B,SAA5BA,yBAA4B;AAAA,SAChC;AAAA;AAAA;AACE,yDAAc,OAAM,SAApB,EAA8B,OAAOF,KAArC,GADF;AAEE,yDAAc,OAAM,SAApB,EAA8B,SAAS,IAAvC,EAA6C,OAAOA,KAApD,GAFF;AAGE,yDAAc,OAAM,WAApB,EAAgC,WAAW,IAA3C,EAAiD,OAAOA,KAAxD,GAHF;AAIE,yDAAc,OAAM,UAApB,EAA+B,UAAU,IAAzC,EAA+C,OAAOA,KAAtD,GAJF;AAKE,6CALF;AAME,6CANF;AAOE,yDAAc,OAAM,YAApB,EAAiC,WAAW,IAA5C;AAPF,GADgC;AAAA,CAAlC;;AAaA;;;AAGA,IAAMG,qBAAqB,SAArBA,kBAAqB;AAAA,SACzB;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AADF,KADF;AAQE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF,OADF;AAME;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF,OANF;AAWE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF,OAXF;AAgBE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF,OAhBF;AAqBE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AArBF;AARF,GADyB;AAAA,CAA3B;;IAuCMC;;;;;;;;;;;6BACK;AACP,aAAO,8BAAC,kBAAD,OAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;EATmB,gBAAMC;;kBAYbD;;;;;;;;;;AClFf;;;;;;AAEA,IAAME,gBAAgB,SAAhBA,aAAgB;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAtB;;kBAEeA;;;;;;;;;;ACJf;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB;AAAA,SAAM;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAtB;kBACeA;;;;;;;;;;;;YCHf;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;IAEOC,+BAAAA;;AAEP;;IAEMC,cADLD;;;;;;;;;;;;AAEC;AACA;wCACoB;AAAA;;AAClBE,kBAAY,YAAM;AAAA,YACTZ,KADS,GACA,OAAKa,KADL,CACTb,KADS;;AAEhBA,cAAMF,SAAN;AACD,OAHD,EAGG,IAHH;AAID;;;6BAEQ;AAAA,mBACmB,KAAKe,KADxB;AAAA,UACAb,KADA,UACAA,KADA;AAAA,UACOc,QADP,UACOA,QADP;;AAEP,UAAMnB,QAAQK,MAAML,KAApB;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACE;AAAA;AAAA;AAAA;AAAYA;AAAZ,SADF;AAEGmB;AAFH,OADF;AAMD;;;;EApBuB,gBAAMN;;kBAuBjBG;;;;;;;;;;;;;;ACpCf;;;;AACA;;AACA;;;;AACA;;AAMA;;;;;;;;;;;;AAEA,IAAMI,iBAAiB,qCAAvB;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC5C,SAAO;AACLC,QAAI;AAAA;AAAA;AAAI;AAAA;AAAA,UAAM,IAAIF,IAAV;AAAiBA;AAAjB;AAAJ,KADC;AAELG,WAAO,uDAAO,MAAMH,IAAb,EAAmB,WAAWC,SAA9B;AAFF,GAAP;AAID,CALD;;AAOA;;;IAEMG;;;AACJ,sBAAYC,MAAZ,EAAoB;AAAA;;AAAA,wHACZA,MADY;;AAElB,UAAKC,OAAL,GAAeR,cAAf;AACA,UAAKS,MAAL,GAAc,sBAAd;AACA,UAAKC,KAAL,GAAa,EAAb;AAJkB;AAKnB;;;;wBAEGC,aAAaR,WAAW;AAC1B,UAAMS,OAAO,4BAAcD,WAAd,CAAb;;AAEA,WAAKF,MAAL,CAAYvC,GAAZ,CAAgB;AACdyC,gCADc;AAEdC,kBAFc;AAGdT;AAHc,OAAhB;;AAMA,aAAO,IAAP;AACD;;AAED;;;;gCACY;AAAA,+BACgB,KAAKM,MAAL,CAAYI,MAAZ,GAAqBC,GAArB,CAAyB;AAAA,eAAST,MAAMF,SAAf;AAAA,OAAzB,CADhB;AAAA;AAAA,UACHY,GADG;AAAA,UACEC,GADF;AAAA,UACOC,KADP;;AAIV,aAAO;AAAA,eACL;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAG,GAAT;AAAA;AAAA;AAAJ,eADF;AAEE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAG,MAAT;AAAA;AAAA;AAAJ,eAFF;AAGE;AAAA;AAAA;AAAI;AAAA;AAAA,oBAAM,IAAG,QAAT;AAAA;AAAA;AAAJ;AAHF,aADF;AAME,mEAAO,WAAP,EAAa,MAAK,GAAlB,EAAsB,WAAWF,GAAjC,GANF;AAOE,mEAAO,MAAK,MAAZ,EAAmB,WAAWC,GAA9B,GAPF;AAQE,mEAAO,MAAK,QAAZ,EAAqB,WAAWC,KAAhC;AARF;AADF,SADK;AAAA,OAAP;AAcD;;;;;;kBAGYX","file":"","sourcesContent":["// setup\nrequire('./bootstrap')\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport store from '../state/Store'\nimport Pages from '../pages'\nimport AppWrap from './AppWrapGlue'\nimport RouteChainFactory from './RouteChainFactory'\nimport '../styles/index.css'\n\n// https://github.com/foxhound87/rfx-core\nconst {one, two, three} = Pages\n\n// @TODO here would be where we split pages,\n//       alongside the split config in fuse or webpack\n// @TODO router goes inside appwrap\nconst builder = new RouteChainFactory()\nbuilder.add('/', one).add('/two', two).add('/three', three)\nconst Router = builder.getRouter()\n\nconst elementToRenderTo = document.getElementById('root')\nconst App = () => (\n  <AppWrap store={store}>\n    <MuiThemeProvider>\n      <Router store={store} />\n    </MuiThemeProvider>\n  </AppWrap>\n)\n\nReactDOM.render(<App />, elementToRenderTo)\n// ReactDOM.render(<AppWrap store={store} />, elementToRenderTo)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mobx from 'mobx'\nimport mobxReact from 'mobx-react'\nimport {types} from 'mobx-state-tree'\n\n// https://github.com/mobxjs/mobx-state-tree\nconst AppModel = types.model(\n  {\n    count: types.optional(types.number, 0),\n  },\n  {\n    increment() {\n      this.count++\n    },\n    decrement() {\n      this.count--\n    },\n  }\n)\n\nconst store = AppModel.create()\nexport default store\n","// @TODO @NOTE\n// here we can also import async instead of in bootstrap\n// we can also import a whole folder with a glob import\nimport one from './one'\nimport two from './two'\nimport three from './three'\n\nconst pages = {one, two, three}\n\nexport default pages\n","import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n  RaisedButton,\n} from 'material-ui/Table'\n\nconst style = {\n  margin: 12,\n}\n\nconst RaisedButtonExampleSimple = () => (\n  <div>\n    <RaisedButton label=\"Default\" style={style} />\n    <RaisedButton label=\"Primary\" primary={true} style={style} />\n    <RaisedButton label=\"Secondary\" secondary={true} style={style} />\n    <RaisedButton label=\"Disabled\" disabled={true} style={style} />\n    <br />\n    <br />\n    <RaisedButton label=\"Full width\" fullWidth={true} />\n  </div>\n)\n\n\n/**\n * A simple table demonstrating the hierarchy of the `Table` component and its sub-components.\n */\nconst TableExampleSimple = () => (\n  <Table>\n    <TableHeader>\n      <TableRow>\n        <TableHeaderColumn>ID</TableHeaderColumn>\n        <TableHeaderColumn>Name</TableHeaderColumn>\n        <TableHeaderColumn>Status</TableHeaderColumn>\n      </TableRow>\n    </TableHeader>\n    <TableBody>\n      <TableRow>\n        <TableRowColumn>1</TableRowColumn>\n        <TableRowColumn>John Smith</TableRowColumn>\n        <TableRowColumn>Employed</TableRowColumn>\n      </TableRow>\n      <TableRow>\n        <TableRowColumn>2</TableRowColumn>\n        <TableRowColumn>Randal White</TableRowColumn>\n        <TableRowColumn>Unemployed</TableRowColumn>\n      </TableRow>\n      <TableRow>\n        <TableRowColumn>3</TableRowColumn>\n        <TableRowColumn>Stephanie Sanders</TableRowColumn>\n        <TableRowColumn>Employed</TableRowColumn>\n      </TableRow>\n      <TableRow>\n        <TableRowColumn>4</TableRowColumn>\n        <TableRowColumn>Steve Brown</TableRowColumn>\n        <TableRowColumn>Employed</TableRowColumn>\n      </TableRow>\n      <TableRow>\n        <TableRowColumn>5</TableRowColumn>\n        <TableRowColumn>Christopher Nolan</TableRowColumn>\n        <TableRowColumn>Unemployed</TableRowColumn>\n      </TableRow>\n    </TableBody>\n  </Table>\n)\n\nclass PageOne extends React.Component {\n  render() {\n    return <TableExampleSimple />\n    // (\n    //   <section>\n    //     <TableExampleSimple />\n    //     <RaisedButtonExampleSimple />\n    //   </section>\n    // )\n  }\n}\n\nexport default PageOne\n","import React from 'react'\n\nconst noopComponent = () => <h1>noop</h1>\n\nexport default noopComponent\n","import React from 'react'\n\nconst noopComponent = () => <h1>noop</h1>\nexport default noopComponent\n","// import _ from 'lodash'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport mobx from 'mobx'\nimport mobxReact from 'mobx-react'\nimport {types} from 'mobx-state-tree'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport DevTool from 'mobx-react-devtools'\n\nconst {observer} = mobxReact\n\n// wraps app, glues parts together...\n@observer\nclass AppWrapGlue extends React.Component {\n  // @NOTE this is a minimal example of state being updated every second\n  //       which renders the wrapper and shows the count\n  componentDidMount() {\n    setInterval(() => {\n      const {store} = this.props\n      store.increment()\n    }, 1000)\n  }\n\n  render() {\n    const {store, children} = this.props\n    const count = store.count\n\n    return (\n      <div className=\"playground\">\n        <h1>count: {count}</h1>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default AppWrapGlue\n","import React from 'react'\nimport {Chain, ChainedSet} from 'chain-able/dist'\nimport routeToRegExp from 'path-to-regexp'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n} from 'react-router-dom'\n\nimport createHistory from 'history/createBrowserHistory'\n\nconst browserHistory = createHistory()\nconst listLinkAndRoute = (path, component) => {\n  return {\n    li: <li><Link to={path}>{path}</Link></li>,\n    route: <Route path={path} component={component}/>,\n  }\n}\n\n/**\n */\nclass RouteChain extends Chain {\n  constructor(parent) {\n    super(parent)\n    this.history = browserHistory\n    this.routes = new ChainedSet()\n    this.state = {}\n  }\n\n  add(pathToMatch, component) {\n    const test = routeToRegExp(pathToMatch)\n\n    this.routes.add({\n      pathToMatch,\n      test,\n      component,\n    })\n\n    return this\n  }\n\n  // @TODO generate these, this is just hardcoded for quickest list\n  getRouter() {\n    const [One, Two, Three] = this.routes.values().map(route => route.component)\n\n\n    return () => (\n      <Router>\n        <div>\n          <ul>\n            <li><Link to=\"/\">One</Link></li>\n            <li><Link to=\"/two\">Two</Link></li>\n            <li><Link to=\"/three\">Three</Link></li>\n          </ul>\n          <Route exact path=\"/\" component={One}/>\n          <Route path=\"/two\" component={Two}/>\n          <Route path=\"/three\" component={Three}/>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default RouteChain\n"]}